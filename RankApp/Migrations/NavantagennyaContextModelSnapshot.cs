// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RankApp.Data;
using System;

namespace RankApp.Migrations
{
    [DbContext(typeof(NavantagennyaContext))]
    partial class NavantagennyaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RankApp.Data.MetodRob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("EkspertDyplom");

                    b.Property<double?>("EkspertDyplomNRobit");

                    b.Property<string>("PIB");

                    b.Property<double?>("PerekladStat");

                    b.Property<double?>("PerekladStatNStor");

                    b.Property<double?>("PerevirkaOlimp");

                    b.Property<double?>("PerevirkaOlimpNRobit");

                    b.Property<double?>("PidgotovkaDopovidTaVistup");

                    b.Property<double?>("PidgotovkaDopovidTaVistupNVistup");

                    b.Property<double?>("PidgotovkaLabPrakt");

                    b.Property<double?>("PidgotovkaLekciiBakalavr");

                    b.Property<double?>("PidgotovkaLekciiBakalavrN");

                    b.Property<double?>("PidgotovkaLekciiMagistr");

                    b.Property<double?>("PidgotovkaLekciiMagistrN");

                    b.Property<double?>("PidgotovkaMater");

                    b.Property<double?>("PidgotovkaRecenzVidkr");

                    b.Property<double?>("PidgotovkaRecenzVidkrNZanat");

                    b.Property<double?>("PidvKval");

                    b.Property<double?>("RecenzPidruch");

                    b.Property<double?>("RecenzPidruchNStor");

                    b.Property<double?>("RecenzRozrobok");

                    b.Property<double?>("RecenzRozrobokNStor");

                    b.Property<double?>("RobotaNavchGrup");

                    b.Property<double?>("Rozrobka15");

                    b.Property<double?>("RozrobkaInterMet");

                    b.Property<double?>("RozrobkaInterMetNZanyat");

                    b.Property<double?>("RozrobkaLab");

                    b.Property<double?>("RozrobkaLabNRobit");

                    b.Property<double?>("RozrobkaNavchMat");

                    b.Property<double?>("RozrobkaNavchMatNZanyat");

                    b.Property<double?>("RozrobkaVNS");

                    b.Property<double?>("RozrobkaVNSNDisc");

                    b.Property<double?>("RozrobkaZavdan");

                    b.Property<double?>("RozrobkaZavdanNZavdan");

                    b.Property<double?>("SiteKafedra");

                    b.Property<double?>("StagBezVidr");

                    b.Property<bool>("StagBezVidrBool");

                    b.Property<double?>("StagZVidr");

                    b.Property<bool>("StagZVidrBool");

                    b.Property<double?>("Sum");

                    b.Property<double?>("UchastRobGrup");

                    b.Property<double?>("UchastRobGrupNDniv");

                    b.Property<string>("User");

                    b.Property<double?>("VidannyaPidruch");

                    b.Property<double?>("VidannyaRozrobok");

                    b.Property<double?>("VzaemVidvid");

                    b.HasKey("Id");

                    b.ToTable("MetodRobs");
                });

            modelBuilder.Entity("RankApp.Data.NaukRob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("DopovidKafedra");

                    b.Property<double?>("DopovidMijnarod");

                    b.Property<double?>("DopovidUkr");

                    b.Property<double?>("KerivNaukStud");

                    b.Property<double?>("KerivNaukStudMijnarodUkr");

                    b.Property<double?>("KerivNaukStudMijnarodZaKordon");

                    b.Property<double?>("KerivNaukStudVseukrain");

                    b.Property<double?>("KerivStud");

                    b.Property<double?>("KerivStudKonkursN");

                    b.Property<double?>("KerivStudOhoronDocN");

                    b.Property<double?>("KerivStudStattyaN");

                    b.Property<double?>("KerivStudTezDopovidN");

                    b.Property<double?>("KerivSudNaukGurtok");

                    b.Property<bool>("KerivSudNaukGurtokBool");

                    b.Property<double?>("MaterialMijnNeScopus");

                    b.Property<double?>("MaterialScopus");

                    b.Property<double?>("MaterialUkrNeScopus");

                    b.Property<double?>("MijnarodDogovir");

                    b.Property<double?>("NaukEksped");

                    b.Property<double?>("NaukEkspedNDniv");

                    b.Property<double?>("OformlennyaKorMod");

                    b.Property<double?>("OformlennyaPatent");

                    b.Property<double?>("OponDesertDoktor");

                    b.Property<double?>("OponDesertDoktorN");

                    b.Property<double?>("OponDesertKandidat");

                    b.Property<double?>("OponDesertKandidatN");

                    b.Property<double?>("OtrymannyaKorMod");

                    b.Property<double?>("OtrymannyaPatent");

                    b.Property<string>("PIB");

                    b.Property<double?>("PidgotovkaMONGrant");

                    b.Property<double?>("PidgotovkaMijnarodGrant");

                    b.Property<double?>("PidgotovkaNDR");

                    b.Property<double?>("PidgotovkaSpilnProekt");

                    b.Property<double?>("PidgotovkaStud");

                    b.Property<double?>("PidgotovkaStudMijn");

                    b.Property<double?>("PidgotovkaStudMijnUkr");

                    b.Property<double?>("PidgotovkaStudMijnZaKordonom");

                    b.Property<double?>("RecenzDesertDoktor");

                    b.Property<double?>("RecenzDesertDoktorN");

                    b.Property<double?>("RecenzDesertKandidat");

                    b.Property<double?>("RecenzDesertKandidatN");

                    b.Property<double?>("RecenzMonografy");

                    b.Property<double?>("RecenzMonografyNStor");

                    b.Property<double?>("RecenzStattya");

                    b.Property<double?>("RecenzStattyaN");

                    b.Property<double?>("StajZakordonVNZ");

                    b.Property<double?>("StajZakordonVNZNDniv");

                    b.Property<double?>("StattyaMijnarodVitch");

                    b.Property<double?>("StattyaMijnarodZakordon");

                    b.Property<double?>("StattyaNeMignarod");

                    b.Property<double?>("StattyaScopusAngl");

                    b.Property<double?>("StattyaScopusUkr");

                    b.Property<double?>("Sum");

                    b.Property<double?>("TezMijn");

                    b.Property<double?>("TezUkr");

                    b.Property<string>("User");

                    b.Property<double?>("VidannyaFahUkr");

                    b.Property<double?>("VidannyaMonografy");

                    b.Property<double?>("VidannyaNeFahUkr");

                    b.Property<double?>("VistavkaNaukDosMijnarod");

                    b.Property<double?>("VistavkaNaukDosRegion");

                    b.Property<double?>("VistavkaNaukDosVseukrain");

                    b.Property<double?>("ZahistDoktor");

                    b.Property<bool>("ZahistDoktorBool");

                    b.Property<double?>("ZahistKandidat");

                    b.Property<bool>("ZahistKandidatBool");

                    b.HasKey("Id");

                    b.ToTable("NaukRobs");
                });

            modelBuilder.Entity("RankApp.Data.Navantagennya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Aspiranty");

                    b.Property<double>("Consultant");

                    b.Property<double>("DEK");

                    b.Property<double>("Dyplom");

                    b.Property<int>("Grup");

                    b.Property<string>("Grupa");

                    b.Property<double>("Isput");

                    b.Property<double>("Kontrolny");

                    b.Property<int>("Kurs");

                    b.Property<double>("Kursovi");

                    b.Property<double>("Laborant");

                    b.Property<double>("Lekcii");

                    b.Property<double>("Modul");

                    b.Property<string>("Nazva");

                    b.Property<int>("NumberDisc");

                    b.Property<int>("NumberPP");

                    b.Property<int>("Pidgrup");

                    b.Property<double>("Praktuchni");

                    b.Property<double>("Praktyka");

                    b.Property<string>("Primitka");

                    b.Property<string>("Semestr");

                    b.Property<int>("Studentiv");

                    b.Property<string>("User");

                    b.Property<string>("Vikladach");

                    b.Property<double>("Vsyogo");

                    b.Property<double>("Zalik");

                    b.HasKey("Id");

                    b.ToTable("Navantagennyas");
                });

            modelBuilder.Entity("RankApp.Data.NavchRob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("DyplomBakalavr");

                    b.Property<double?>("DyplomBakalavrNChlen");

                    b.Property<double?>("DyplomBakalavrNKeriv");

                    b.Property<double?>("DyplomBakalavrNKonsult");

                    b.Property<double?>("DyplomMagistr");

                    b.Property<double?>("DyplomMagistrNChlen");

                    b.Property<double?>("DyplomMagistrNKeriv");

                    b.Property<double?>("DyplomMagistrNKonsult");

                    b.Property<double?>("DyplomSpecialist");

                    b.Property<double?>("DyplomSpecialistNChlen");

                    b.Property<double?>("DyplomSpecialistNKeriv");

                    b.Property<double?>("DyplomSpecialistNKonsult");

                    b.Property<double?>("EkzamenAspirant");

                    b.Property<double?>("EkzamenAspirantNStud");

                    b.Property<double?>("EkzamenDerjavn");

                    b.Property<double?>("EkzamenDerjavnNStud");

                    b.Property<double?>("EkzamenInshiPred");

                    b.Property<double?>("EkzamenInshiPredNGrup");

                    b.Property<double?>("EkzamenInshiPredNRobit");

                    b.Property<double?>("EkzamenSluhach");

                    b.Property<double?>("EkzamenSluhachNChlen");

                    b.Property<double?>("EkzamenTest");

                    b.Property<double?>("EkzamenTestNGrup");

                    b.Property<double?>("EkzamenUkrMovaDyktant");

                    b.Property<double?>("EkzamenUkrMovaDyktantNGrup");

                    b.Property<double?>("EkzamenUkrMovaDyktantNRobit");

                    b.Property<double?>("EkzamenUkrMovaPerekaz");

                    b.Property<double?>("EkzamenUkrMovaPerekazNGrup");

                    b.Property<double?>("EkzamenUkrMovaPerekazNRobit");

                    b.Property<double?>("EkzamenUkrMovaTvir");

                    b.Property<double?>("EkzamenUkrMovaTvirNGrup");

                    b.Property<double?>("EkzamenUkrMovaTvirNRobit");

                    b.Property<double?>("EkzamenUsn");

                    b.Property<double?>("EkzamenUsnNStud");

                    b.Property<double?>("Individual");

                    b.Property<double?>("KerivnukAspirant");

                    b.Property<double?>("KerivnukAspirantN");

                    b.Property<double?>("KerivnukSluhach");

                    b.Property<double?>("KerivnukSluhachNChlen");

                    b.Property<double?>("KerivnukSluhachNKeriv");

                    b.Property<double?>("KerivnukSluhachNKonsult");

                    b.Property<double?>("KerivnukStajSluhach");

                    b.Property<double?>("KerivnukStajSluhachN");

                    b.Property<double?>("KerivnukStajVikladach");

                    b.Property<double?>("KerivnukZdobuvach");

                    b.Property<double?>("KerivnukZdobuvachN");

                    b.Property<double?>("KonsultDokrtor");

                    b.Property<double?>("KonsultDokrtorN");

                    b.Property<double?>("KonsultEkzamDerj");

                    b.Property<double?>("KonsultEkzamDerjNGrup");

                    b.Property<double?>("KonsultEkzamSemestr");

                    b.Property<double?>("KonsultEkzamSemestrNGrup");

                    b.Property<double?>("KonsultEkzamVstup");

                    b.Property<double?>("KonsultEkzamVstupNGrup");

                    b.Property<double?>("KonsultNavch");

                    b.Property<double?>("Laboratorni");

                    b.Property<double?>("Lekcii");

                    b.Property<string>("PIB");

                    b.Property<double?>("PerevirkaGraf");

                    b.Property<double?>("PerevirkaGrafN");

                    b.Property<double?>("PerevirkaKontr");

                    b.Property<double?>("PerevirkaKontrN");

                    b.Property<double?>("PerevirkaKursProjFah");

                    b.Property<double?>("PerevirkaKursProjFahNrobit");

                    b.Property<double?>("PerevirkaKursProjZagIng");

                    b.Property<double?>("PerevirkaKursProjZagIngNRobit");

                    b.Property<double?>("PerevirkaKursRobFah");

                    b.Property<double?>("PerevirkaKursRobFahNRobit");

                    b.Property<double?>("PerevirkaKursRobZagOsv");

                    b.Property<double?>("PerevirkaKursRobZagOsvNRobit");

                    b.Property<double?>("PerevirkaRefer");

                    b.Property<double?>("PerevirkaReferN");

                    b.Property<double?>("Prakticni");

                    b.Property<double?>("PraktikDiplomna");

                    b.Property<double?>("PraktikNavchalna");

                    b.Property<double?>("PraktikVirobn");

                    b.Property<double?>("RecenzReferat");

                    b.Property<double?>("RecenzReferatNRobit");

                    b.Property<double?>("SemestEkzPism");

                    b.Property<double?>("SemestEkzPismNGrup");

                    b.Property<double?>("SemestEkzPismNRobit");

                    b.Property<double?>("SemestEkzUsn");

                    b.Property<double?>("SemestEkzUsnNGrup");

                    b.Property<double?>("Seminar");

                    b.Property<double?>("Spivbesida");

                    b.Property<double?>("SpivbesidaNStud");

                    b.Property<double?>("Sum");

                    b.Property<double?>("TematDisc");

                    b.Property<string>("User");

                    b.Property<double?>("Zalik");

                    b.HasKey("Id");

                    b.ToTable("NavchRobs");
                });

            modelBuilder.Entity("RankApp.Data.NormatKilkistBalivOrgRob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("AdminWebMerejKafedra");

                    b.Property<bool>("AdminWebMerejKafedraBool");

                    b.Property<double?>("CivilOboron");

                    b.Property<bool>("CivilOboronBool");

                    b.Property<double?>("EstetKaredra");

                    b.Property<double?>("FormIndividPlanStud");

                    b.Property<double?>("FormIndividPlanStudNStud");

                    b.Property<double?>("FormKontingentVstupMagistr");

                    b.Property<double?>("FormKontingentVstupMagistrNStud");

                    b.Property<double?>("KerivSudKlubSekciya");

                    b.Property<bool>("KerivSudKlubSekciyaBool");

                    b.Property<double?>("KontrolYakostiPidgFah");

                    b.Property<double?>("KontrolYakostiPidgFahIndividZavdNStud");

                    b.Property<double?>("KontrolYakostiPidgFahKontrRobNStud");

                    b.Property<double?>("KontrolYakostiPidgFahKontrRobZaochNStud");

                    b.Property<double?>("KontrolYakostiPidgFahRozrahGrafRobNStud");

                    b.Property<double?>("OcinRobVikladach");

                    b.Property<bool>("OcinRobVikladachBool");

                    b.Property<double?>("OhoronaPraci");

                    b.Property<bool>("OhoronaPraciBool");

                    b.Property<double?>("OrgDistancZahid");

                    b.Property<double?>("OrgMijnarodMobil");

                    b.Property<double?>("OrgMijnarodMobilNStud");

                    b.Property<double?>("OrgMijnarodZahid");

                    b.Property<double?>("OrgNaukSemNAN");

                    b.Property<bool>("OrgNaukSemNANGolovaBool");

                    b.Property<bool>("OrgNaukSemNANSekretarBool");

                    b.Property<double?>("OrgNavchDiscInozemMova");

                    b.Property<double?>("OrgNavchDiscInozemMovaNDisc");

                    b.Property<double?>("OrgOlimpDrugEtap");

                    b.Property<double?>("OrgOlimpPershEtap");

                    b.Property<double?>("OrgPislyaDiplomOsv");

                    b.Property<bool>("OrgPislyaDiplomOsvBool");

                    b.Property<double?>("OrgPodvDyplom");

                    b.Property<double?>("OrgPodvDyplomNStud");

                    b.Property<double?>("OrgTaProvKultZahid");

                    b.Property<double?>("OrgTaProvTematVechir");

                    b.Property<double?>("OrgTaSuprovidNaukMetRobKafedra");

                    b.Property<bool>("OrgTaSuprovidNaukMetRobKafedraBool");

                    b.Property<double?>("OrgUniverStudZahid");

                    b.Property<double?>("OrgVseUkrZahid");

                    b.Property<double?>("OrgZyazokZVipusk");

                    b.Property<bool>("OrgZyazokZVipuskBool");

                    b.Property<string>("PIB");

                    b.Property<double?>("PidOrgTaProvSvorchZahod");

                    b.Property<double?>("PidgotDyplomVseUkr");

                    b.Property<double?>("PidgotDyplomVseUkrNRobit");

                    b.Property<double?>("ProfOrientRob");

                    b.Property<double?>("ProfOrientRobNDniv");

                    b.Property<double?>("ProvedennyaEkskurs");

                    b.Property<double?>("ProvedennyaEkskursNZahid");

                    b.Property<double?>("RobotaEkspKonkursKomis");

                    b.Property<double?>("RobotaEkspKonkursKomisNNINZasid");

                    b.Property<double?>("RobotaEkspKonkursKomisUniverNZasid");

                    b.Property<double?>("RobotaEksperKomisDesertDoktor");

                    b.Property<double?>("RobotaEksperKomisDesertKandidat");

                    b.Property<double?>("RobotaFormNaukVidanMijnarod");

                    b.Property<double?>("RobotaFormNaukVidanScopus");

                    b.Property<double?>("RobotaFormNaukVidanUkr");

                    b.Property<double?>("RobotaIzPracevlashtuvannya");

                    b.Property<bool>("RobotaIzPracevlashtuvannyaBool");

                    b.Property<double?>("RobotaKomisPoperedZahistDyplom");

                    b.Property<bool>("RobotaKomisPoperedZahistDyplomBool");

                    b.Property<double?>("RobotaMetodRad");

                    b.Property<double?>("RobotaMetodRadNZasid");

                    b.Property<double?>("RobotaNaukMetodNaukTehRadah");

                    b.Property<double?>("RobotaNaukMetodNaukTehRadahNZasid");

                    b.Property<double?>("RobotaPrimKomis");

                    b.Property<bool>("RobotaPrimKomisOsobamBool");

                    b.Property<bool>("RobotaPrimKomisSekretarBool");

                    b.Property<double?>("RobotaRadaDesert");

                    b.Property<double?>("RobotaRadaDesertChlenNZasid");

                    b.Property<double?>("RobotaRadaDesertGolovaNZasid");

                    b.Property<double?>("RobotaRadaDesertSekretarNZasid");

                    b.Property<double?>("RobotaRedakNaukVidan");

                    b.Property<double?>("RobotaRedakNaukVidanNVipusk");

                    b.Property<double?>("RobotaRozvitokMijnarodZvyazok");

                    b.Property<bool>("RobotaRozvitokMijnarodZvyazokKafedraBool");

                    b.Property<bool>("RobotaRozvitokMijnarodZvyazokNNIBool");

                    b.Property<double?>("RobotaVKomisMON");

                    b.Property<double?>("RobotaVKomisMONNZasid");

                    b.Property<double?>("RobotaVchenaRadaUniver");

                    b.Property<double?>("RobotaVchenaRadaUniverClenNZasid");

                    b.Property<bool>("RobotaVchenaRadaUniverSekretarNNIBool");

                    b.Property<bool>("RobotaVchenaRadaUniverSekretarUniverBool");

                    b.Property<double?>("RobotaVikladachKurator");

                    b.Property<bool>("RobotaVikladachKuratorBool");

                    b.Property<double?>("RozpodilNavchNavant");

                    b.Property<bool>("RozpodilNavchNavantBool");

                    b.Property<double?>("RozrobSaitKafedra");

                    b.Property<double?>("RozrobkaDodatkivMijnarod");

                    b.Property<bool>("RozrobkaDodatkivMijnarodBool");

                    b.Property<double?>("SekretarEK");

                    b.Property<bool>("SekretarEKBool");

                    b.Property<double?>("SekretarKafedra");

                    b.Property<bool>("SekretarKafedraBool");

                    b.Property<double?>("StajVikladach");

                    b.Property<double?>("Sum");

                    b.Property<double?>("SuprovidVirtNavchSered");

                    b.Property<bool>("SuprovidVirtNavchSeredBool");

                    b.Property<double?>("SuprovidWebStorKafedra");

                    b.Property<double?>("UchastRadHimRozvidka");

                    b.Property<bool>("UchastRadHimRozvidkaBool");

                    b.Property<double?>("UchastTovarMolodVchen");

                    b.Property<bool>("UchastTovarMolodVchenBool");

                    b.Property<double?>("UchastURozrobSystemUniver");

                    b.Property<bool>("UchastURozrobSystemUniverBool");

                    b.Property<string>("User");

                    b.Property<double?>("VprovSystemVipuskPrac");

                    b.Property<bool>("VprovSystemVipuskPracBool");

                    b.Property<double?>("ZvyazokBiblioteka");

                    b.Property<bool>("ZvyazokBibliotekaBool");

                    b.Property<double?>("ZvyazokPidprPrakt");

                    b.Property<bool>("ZvyazokPidprPraktBool");

                    b.HasKey("Id");

                    b.ToTable("NormatKilkistBalivOrgRobs");
                });

            modelBuilder.Entity("RankApp.Data.OrgRob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("EstetKaredra");

                    b.Property<bool>("EstetKaredraBool");

                    b.Property<double?>("KerivnukKafedra");

                    b.Property<bool>("KerivnukKafedraBool");

                    b.Property<double?>("ObovjazokKafedra");

                    b.Property<bool>("ObovjazokKafedraSekretarBool");

                    b.Property<bool>("ObovjazokKafedraZastupnikBool");

                    b.Property<double?>("OrgKafedraZahid");

                    b.Property<bool>("OrgKafedraZahidBool");

                    b.Property<double?>("OrgZagalUniverZahid");

                    b.Property<bool>("OrgZagalUniverZahidBool");

                    b.Property<double?>("OrganizaciaEkskurs");

                    b.Property<bool>("OrganizaciaEkskursBool");

                    b.Property<string>("PIB");

                    b.Property<double?>("PidtrumkaWEB");

                    b.Property<bool>("PidtrumkaWEBBool");

                    b.Property<double?>("ProvedennyaBesid");

                    b.Property<bool>("ProvedennyaBesidBool");

                    b.Property<double?>("RobotaRevizia");

                    b.Property<bool>("RobotaReviziaGolovaBool");

                    b.Property<bool>("RobotaReviziaSekretarBool");

                    b.Property<bool>("RobotaReviziaZastupnikBool");

                    b.Property<double?>("RobotaTrudKolektiv");

                    b.Property<bool>("RobotaTrudKolektivClenBool");

                    b.Property<bool>("RobotaTrudKolektivGolovaBool");

                    b.Property<bool>("RobotaTrudKolektivSekretarBool");

                    b.Property<bool>("RobotaTrudKolektivZastupnikBool");

                    b.Property<double?>("RobotaVchenaRada");

                    b.Property<bool>("RobotaVchenaRadaClenBool");

                    b.Property<bool>("RobotaVchenaRadaGolovaBool");

                    b.Property<bool>("RobotaVchenaRadaSekretarBool");

                    b.Property<double?>("RozrobkaMaterialivZahid");

                    b.Property<bool>("RozrobkaMaterialivZahidPhotoBool");

                    b.Property<bool>("RozrobkaMaterialivZahidPrezentaciaBool");

                    b.Property<bool>("RozrobkaMaterialivZahidVideoBool");

                    b.Property<double?>("SekretarNaukMetodSeminar");

                    b.Property<double?>("SekretarNaukMetodSeminarNZasid");

                    b.Property<double?>("SekretarPrijomKomis");

                    b.Property<bool>("SekretarPrijomKomisBool");

                    b.Property<double?>("Sum");

                    b.Property<double?>("UchastProfOrient");

                    b.Property<bool>("UchastProfOrientBool");

                    b.Property<string>("User");

                    b.Property<double?>("ZasidannyaKafedra");

                    b.Property<double?>("ZasidannyaKafedraNZasid");

                    b.HasKey("Id");

                    b.ToTable("OrgRobs");
                });
#pragma warning restore 612, 618
        }
    }
}
